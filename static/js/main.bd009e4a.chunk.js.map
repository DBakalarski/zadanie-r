{"version":3,"sources":["Components/User.js","Components/UsersList.js","Components/SearchPanel.js","Components/DisplayChangeButton.js","Components/App.js","serviceWorker.js","index.js"],"names":["User","props","classes","sex","className","src","img","alt","name","city","street","houseNumber","age","email","UsersList","letters","sort","sortUser","inputValue","toLowerCase","data","filter","item","indexOf","a","b","users","map","user","key","_id","avatar","address","style","displayVertical","display","flexDirection","alignItems","flexWrap","justifyContent","SearchPanel","onChange","e","change","value","this","type","valueInput","Component","DisplayChangeButton","onClick","click","App","state","sortUsers","handleDropdownChange","console","log","target","nodeName","setState","fetch","then","response","json","valueSelect","handleDisplayChange","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd009e4a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst User = (props) => {\r\n\r\n    const classes = props.sex ? \"user woman\" : \"user\"\r\n\r\n    return (\r\n        <div className={classes}>\r\n            <div className=\"img-container\">\r\n                <img src={props.img} alt=\"avatar\" />\r\n            </div>\r\n            <div className=\"user-information\">\r\n                <p><strong>{props.name}</strong></p>\r\n                <p>{props.city}, ul. {props.street} {props.houseNumber}</p>\r\n                <p>Płeć: {props.sex ? \"kobieta\" : \"mężczyzna\"}</p>\r\n                <p>Wiek: {props.age}</p>\r\n                <p>{props.email}</p>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport User from './User'\r\n\r\nconst UsersList = (props) => {\r\n    const sort = props.sortUser\r\n    const inputValue = props.inputValue.toLowerCase()\r\n    let data = [...props.data]\r\n\r\n    const filerItems = (letters) => {\r\n        return (data.filter(item => item.name.toLowerCase().indexOf(letters) > -1))\r\n\r\n    }\r\n\r\n    data = filerItems(inputValue)\r\n\r\n\r\n    if (sort === \"AZ\") {\r\n        data = data.sort((a, b) => {\r\n            if (b.email < a.email) {\r\n                return 1\r\n            }\r\n            if (b.email > a.email) {\r\n                return -1\r\n            }\r\n            return 0\r\n        })\r\n    } else if (sort === \"ZA\") {\r\n        data = data.sort((a, b) => {\r\n            if (b.email > a.email) {\r\n                return 1\r\n            }\r\n            if (b.email < a.email) {\r\n                return -1\r\n            }\r\n            return 0\r\n        })\r\n    } else if (sort === \"age-up\") {\r\n        data = data.sort((a, b) => {\r\n            if (a.age > b.age) {\r\n                return 1\r\n            }\r\n            if (a.age < b.age) {\r\n                return -1\r\n            }\r\n            return 0\r\n        })\r\n    }\r\n    else if (sort === \"age-down\") {\r\n        data = data.sort((a, b) => {\r\n            if (b.age > a.age) {\r\n                return 1\r\n            }\r\n            if (b.age < a.age) {\r\n                return -1\r\n            }\r\n            return 0\r\n        })\r\n    }\r\n\r\n    const users = data.map(user => (\r\n        <User key={user._id} name={user.name} img={user.avatar} city={user.address.city} street={user.address.street} houseNumber={user.address.houseNumber} email={user.email} sex={user.sex} age={user.age} />\r\n    ))\r\n\r\n    const stylesVertical = {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"space-around\"\r\n    }\r\n\r\n    const stylesHorizontally = {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div style={props.displayVertical ? stylesHorizontally : stylesVertical}>\r\n            {users}\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default UsersList;","import React, { Component } from 'react';\r\n\r\n\r\nclass SearchPanel extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search-pannel\">\r\n                <div className=\"select-sort\">\r\n                    <span>Sortuj według </span>\r\n                    <select onChange={(e) => this.props.change(e)} value={this.props.value} >\r\n                        <option value=\"default\">domyslnie</option>\r\n                        <option value=\"AZ\">e-mail (A-Z)</option>\r\n                        <option value=\"ZA\">e-mail (Z-A)</option>\r\n                        <option value=\"age-up\">wiek (rosnąco)</option>\r\n                        <option value=\"age-down\">wiek (malejąco)</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"input-search\">\r\n                    <span>Wyszukaj po imieniu lub nazwisku </span>\r\n                    <input type=\"text\" onChange={(e) => this.props.change(e)} value={this.props.valueInput} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchPanel;","import React from 'react';\r\n\r\nconst DisplayChangeButton = (props) => {\r\n    return (\r\n        <div className=\"button-change-display\">\r\n            <button onClick={props.click}>\r\n                {props.displayVertical ? \"Wyświetalaj poziomo\" : \"Wyświetlaj pionowo\"}\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DisplayChangeButton;","import React, { Component } from 'react';\r\nimport UsersList from './UsersList'\r\nimport './App.css';\r\nimport SearchPanel from './SearchPanel';\r\nimport DisplayChangeButton from './DisplayChangeButton'\r\n\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n        data: [],\r\n        sortUsers: 'default',\r\n        inputValue: '',\r\n        displayVertical: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('data/clients.json')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    data: data.data\r\n                })\r\n            })\r\n    }\r\n\r\n    handleDisplayChange() {\r\n        this.setState({\r\n            displayVertical: !this.state.displayVertical\r\n        })\r\n    }\r\n\r\n    handleDropdownChange = (e) => {\r\n        console.log(e.target.nodeName)\r\n        if (e.target.nodeName === \"SELECT\") {\r\n            this.setState({\r\n                sortUsers: e.target.value\r\n            })\r\n        } else if ((e.target.nodeName === \"INPUT\")) {\r\n            this.setState({\r\n                inputValue: e.target.value\r\n            })\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <SearchPanel change={(e) => this.handleDropdownChange(e)} valueSelect={this.state.sortUsers} valueInput={this.state.inputValue} />\r\n                <DisplayChangeButton click={() => this.handleDisplayChange()} displayVertical={this.state.displayVertical} />\r\n                <UsersList displayVertical={this.state.displayVertical} data={this.state.data} sortUser={this.state.sortUsers} inputValue={this.state.inputValue} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}